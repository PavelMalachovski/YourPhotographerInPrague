---
#################################
#################################
## Super Linter GitHub Actions ##
#################################
#################################
name: Feature-YourPhotographerInPrague

###############################
#    Environment Parameters   #
###############################
env:
  EB_PACKAGE_S3_BUCKET_NAME: "yourphotographerinprague"
  EB_APPLICATION_NAME: "YourPhotographerInPrague"
  EB_ENVIRONMENT_NAME: "Yourphotographerinprague-env"
  DEPLOY_PACKAGE_NAME: "ypip_feature_${{ github.sha }}.zip"
  AWS_REGION_NAME: "eu-central-1"

on:
  push:
    branches-ignore: [master, main]
    # Remove the line above to run when pushing to master
  pull_request:
    branches: [master, main]

jobs:
  my_linter:
    name: my_linter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          FILTER_REGEX_EXCLUDE: dockerfile|wordpress_static_data/|wordpress\wp-content/|schema/
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  my_docker:
    name: my_docker
    runs-on: ubuntu-latest
    needs: [my_linter]

    steps:
    - uses: actions/checkout@v3
    - name: docker login
      env: 
        DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    # - name: docker build wordpress
    #   uses: actions/checkout@v3
    #   run: |
    #     docker build ./wordpress.Dockerfile -t pavelmalachovski/yourphotographerinprague:latest

    #   - name: docker build mysql
    #     uses: actions/checkout@v3
    #     run: |
    #       docker build ./mysql.Dockerfile -t pavelmalachovski/mysql_ypip:latest


      #   name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_PASSWORD }}
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v3
      #   with:
      #     file: wordpress.Dockerfile
      #     push: true
      #     tags: user/app:latest

  # my_ci_part:
  #   runs-on: ubuntu-latest
  #   needs: [my_linter]
  #   steps:
  #     - name: Git clone our repo
  #       uses: actions/checkout@v3
  #       with:
  #         # Checkout files larger than 100mb
  #         lfs: true
        
  #     - name: Create zip deployment package
  #       run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x -- *.git*
        
  #     - name: Configure my AWS Creds
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
  #         aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
  #         aws-region: ${{ env.AWS_REGION_NAME }}
          
  #     - name: Copy Deployment Package to S3 Bucket
  #       run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        
  #     - name: Print CI part finished successfully
  #       run: echo "CI part finished successfully"

  #     - name: Send telegram message
  #       uses: appleboy/telegram-action@master
  #       with:
  #         to: ${{ secrets.TELEGRAM_TO }}
  #         token: ${{ secrets.TELEGRAM_TOKEN }}
  #         message: |
  #           ${{ github.actor }} created commit:
  #           On Branch: ${{ github.ref }}
  #           Commit message: ${{ github.event.commits[0].message }}

  #           Repository: ${{ github.repository }}

  #           See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}